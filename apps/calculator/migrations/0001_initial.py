# Generated by Django 5.2.2 on 2025-06-07 11:52

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CalculatorResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('clt_salario_bruto', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Salário Bruto CLT')),
                ('clt_vale_alimentacao', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Vale Alimentação')),
                ('clt_vale_transporte', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Vale Transporte')),
                ('clt_plano_saude', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Plano de Saúde')),
                ('clt_outros_beneficios', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Outros Benefícios')),
                ('clt_plr', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='PLR Anual')),
                ('clt_dependentes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Número de Dependentes')),
                ('pj_salario_bruto', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Faturamento Bruto PJ')),
                ('pj_contador', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Taxa do Contador')),
                ('pj_inss', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='INSS PJ')),
                ('pj_taxa_imposto', models.DecimalField(decimal_places=2, default=15.5, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))], verbose_name='Taxa de Imposto (%)')),
                ('pj_outros_gastos', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Outros Gastos PJ')),
                ('clt_liquido_mensal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='CLT Líquido Mensal')),
                ('clt_liquido_anual', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='CLT Líquido Anual')),
                ('pj_liquido_mensal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='PJ Líquido Mensal')),
                ('pj_liquido_anual', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='PJ Líquido Anual')),
                ('diferenca_mensal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Diferença Mensal')),
                ('diferenca_anual', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Diferença Anual')),
            ],
            options={
                'verbose_name': 'Resultado da Calculadora',
                'verbose_name_plural': 'Resultados da Calculadora',
                'ordering': ['-created_at'],
            },
        ),
    ]
